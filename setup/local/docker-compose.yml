version: "3.9"
services:
 

  redis:
    container_name: redis
    image: redis:6.2.4-alpine3.13
    restart: "no"
    command: redis-server --requirepass password
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
 

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:redis-commander-210
    restart: "no"
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379:0:password, \
          local:redis:6379:1:password, \
          local:redis:6379:2:password, \
          local:redis:6379:3:password, \
          local:redis:6379:4:password, \
          local:redis:6379:5:password, \
          local:redis:6379:6:password, \
          local:redis:6379:7:password, \
          local:redis:6379:8:password, \
          local:redis:6379:9:password, \
          local:redis:6379:10:password, \
          local:redis:6379:11:password, \
          local:redis:6379:12:password, \
          local:redis:6379:13:password, \
          local:redis:6379:14:password, \
          local:redis:6379:15:password
      - HTTP_USER=user
      - HTTP_PASSWORD=password
    ports:
      - 16379:8081
 

  #https://docs.docker.com/samples/postgresql_service/
  postgres:
    container_name: postgres
    image: postgres:11.12
    restart: "no"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-logs:/var/log/postgresql
      
  postgres-pgadmin4:
    container_name: postgres-pgadmin4
    image:  dpage/pgadmin4:5.4
    restart: "no"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      - postgres
    ports:
      - 15432:80
      #- 15443:443
    volumes:
      - postgres-pgadmin4-data:/var/lib/pgadmin
      #-v /path/to/certificate.cert:/certs/server.cert \
      #-v /path/to/certificate.key:/certs/server.key \
      #-v /tmp/servers.json:/pgadmin4/servers.json \
 

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2021-06-09T18-51-39Z
    restart: "no"
    command: server /data
    environment:
      - MINIO_ROOT_USER=user
      - MINIO_ROOT_PASSWORD=password
      #- MINIO_BROWSER=off
    ports:
      - 9000:9000
    volumes:
      - minio-data:/data
 

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.17-management-alpine
    restart: "no"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_NODENAME=node1
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672     # AMQP
      - 15671:15671   #
      - 15672:15672   # http (management)
      - 15691:15691   #
      - 15692:15962   # http (prometheus)
      - 25672:25672   # clustering
    volumes:
      - rabbitmq-conf:/etc/rabbitmq
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
 

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.28.0
    restart: "no"
    ports:
      - 9090:9090
    volumes:
      - prometheus-conf:/etc/prometheus
      - prometheus-data:/prometheus
     
  grafana:
    container_name: grafana
    image: grafana/grafana:8.0.3
    restart: "no"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
      #- GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      #- GF_LOG_MODE=console file
    ports:
      - 3000:3000
    volumes:
      - grafana-conf:/etc/grafana
      - grafana-data:/var/lib/grafana
      - grafana-logs:/var/log/grafana
      - grafana-home:/usr/share/grafana
 

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
  postgres-logs:
    driver: local
  postgres-pgadmin4-data:
    driver: local
  minio-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local
  rabbitmq-conf:
    driver: local
  prometheus-data:
    driver: local
  prometheus-conf:
    driver: local
  grafana-data:
    driver: local
  grafana-conf:
    driver: local
  grafana-logs:
    driver: local
  grafana-home:
    driver: local